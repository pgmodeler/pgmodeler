; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "pgModeler"
#define MyAppVersion "v0.4.0-rc"
#define MyAppPublisher "pgModeler Project"
#define MyAppURL "http://www.pgmodeler.com.br/"
#define MyAppExeName "pgmodeler.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{8978809A-8AA1-4DE8-A4B8-058F2CE7B9E7}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\{#MyAppName}
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
LicenseFile=.\build\LICENSE
OutputDir=.\
OutputBaseFilename=setup
Compression=lzma
SolidCompression=yes
ChangesEnvironment=true

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "french"; MessagesFile: "compiler:Languages\French.isl"
Name: "portuguese"; MessagesFile: "compiler:Languages\Portuguese.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked; OnlyBelowVersion: 0,6.1

[Files]
Source: ".\build\pgmodeler.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: ".\build\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:ProgramOnTheWeb,{#MyAppName}}"; Filename: "{#MyAppURL}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: quicklaunchicon

[code]
procedure SetEnv(EnvName, EnvValue: String; IsInstall: Boolean);
var
  OrgValue:String;
  OrgLen:Integer;
  EnvValuePos:Integer;
  EnvValueLen:Integer;
begin

  RegQueryStringValue(HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet\Control\Session Manager\Environment', EnvName, OrgValue);

  OrgValue:=Trim(OrgValue);
  OrgLen:=length(OrgValue);
  EnvValuePos:=pos(Uppercase(EnvValue),Uppercase(OrgValue));
  EnvValueLen:=length(EnvValue);

  if IsInstall then
    begin
      if OrgLen>0 then EnvValue:=';'+EnvValue;
      if EnvValuePos=0 then Insert(EnvValue,OrgValue,OrgLen+1);
    end
  else
    begin
      if EnvValuePos>0 then Delete(OrgValue,EnvValuePos,EnvValueLen);
      if length(OrgValue)=0 then
      begin
        RegDeleteValue(HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet\Control\Session Manager\Environment',EnvName);
        exit;
      end;
    end;

    StringChange(OrgValue,';;',';');
    RegWriteStringValue(HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet\Control\Session Manager\Environment', EnvName, OrgValue);

end;

procedure CurStepChanged(CurStep: TSetupStep);
begin
  if CurStep=ssInstall then
    begin
      SetEnv('Path',ExpandConstant('{app}\lib'),true);
    end;
end;

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
begin
if CurUninstallStep = usUninstall then
    begin
      SetEnv('Path',ExpandConstant('{app}\lib'),false);
    end;
end;
